<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="hostName" elementType="Argument">
            <stringProp name="Argument.name">hostName</stringProp>
            <stringProp name="Argument.value">10.10.90.40</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value">1234</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="++ BalanceInquiry ++" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <nz.co.breakpoint.jmeter.iso8583.ISO8583Config guiclass="TestBeanGUI" testclass="nz.co.breakpoint.jmeter.iso8583.ISO8583Config" testname="conf_90_40_1234" enabled="true">
          <stringProp name="classname">NACChannel</stringProp>
          <stringProp name="configKey">configration</stringProp>
          <stringProp name="connectionSelection">connectionSelection.LAST</stringProp>
          <stringProp name="header"></stringProp>
          <stringProp name="host">${hostName}</stringProp>
          <stringProp name="keyPassword"></stringProp>
          <stringProp name="maxConnections">1</stringProp>
          <stringProp name="mtiMapping"></stringProp>
          <stringProp name="packager">F:/MDI-GIT-Performance/MDI_Perf_Repo/bin/scripts/ATM/1987.xml</stringProp>
          <stringProp name="port">${port}</stringProp>
          <stringProp name="requestListener"></stringProp>
          <boolProp name="reuseConnection">true</boolProp>
          <stringProp name="storePassword"></stringProp>
          <collectionProp name="channelConfig"/>
          <stringProp name="keystore"></stringProp>
          <collectionProp name="muxKeyConfig">
            <elementProp name="" elementType="nz.co.breakpoint.jmeter.iso8583.MuxKeyConfigItem">
              <stringProp name="value">7, 11</stringProp>
            </elementProp>
          </collectionProp>
        </nz.co.breakpoint.jmeter.iso8583.ISO8583Config>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="filename">testData\\input\\ATM\\ATM_TestData_BalanceInquriy.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">balanceInq_Pan,balanceInq_accountNumber</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <nz.co.breakpoint.jmeter.iso8583.ISO8583Sampler guiclass="TestBeanGUI" testclass="nz.co.breakpoint.jmeter.iso8583.ISO8583Sampler" testname="++ BalanceInquiry ++" enabled="true">
          <stringProp name="configKey">configration</stringProp>
          <stringProp name="header"></stringProp>
          <stringProp name="responseCodeField">39</stringProp>
          <stringProp name="successResponseCode">00</stringProp>
          <intProp name="timeout">20000</intProp>
          <stringProp name="trailer"></stringProp>
          <collectionProp name="fields">
            <elementProp name="0" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="0">
              <stringProp name="content">0200</stringProp>
            </elementProp>
            <elementProp name="2" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="2">
              <stringProp name="content">${balanceInq_Pan}</stringProp>
            </elementProp>
            <elementProp name="3" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="3">
              <stringProp name="content">301000</stringProp>
            </elementProp>
            <elementProp name="4" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="4">
              <stringProp name="content">000000000000</stringProp>
            </elementProp>
            <elementProp name="5" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="5">
              <stringProp name="content">000000000000</stringProp>
            </elementProp>
            <elementProp name="6" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="6">
              <stringProp name="content">000000000000</stringProp>
            </elementProp>
            <elementProp name="7" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="7">
              <stringProp name="content">${__time(MMddHHmmss,)}</stringProp>
            </elementProp>
            <elementProp name="11" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="11">
              <stringProp name="content">${__Random(000000,999999)}</stringProp>
            </elementProp>
            <elementProp name="12" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="12">
              <stringProp name="content">${__time(HHmmss,)}</stringProp>
            </elementProp>
            <elementProp name="13" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="13">
              <stringProp name="content">${__time(MMdd,)}</stringProp>
            </elementProp>
            <elementProp name="19" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="19">
              <stringProp name="content">818</stringProp>
            </elementProp>
            <elementProp name="22" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="22">
              <stringProp name="content">051</stringProp>
            </elementProp>
            <elementProp name="26" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="26">
              <stringProp name="content">12</stringProp>
            </elementProp>
            <elementProp name="32" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="32">
              <stringProp name="content">3232011088</stringProp>
            </elementProp>
            <elementProp name="37" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="37">
              <stringProp name="content">${__Random(000000000000,999999999999)}</stringProp>
            </elementProp>
            <elementProp name="41" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="41">
              <stringProp name="content">02220004</stringProp>
            </elementProp>
            <elementProp name="42" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="42">
              <stringProp name="content">MDI Tower</stringProp>
            </elementProp>
            <elementProp name="43" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="43">
              <stringProp name="content">MDI Tower CAIRO EG</stringProp>
            </elementProp>
            <elementProp name="46" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="46">
              <stringProp name="content">11818D00000100</stringProp>
            </elementProp>
            <elementProp name="49" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="49">
              <stringProp name="content">818</stringProp>
            </elementProp>
            <elementProp name="50" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="50">
              <stringProp name="content">818</stringProp>
            </elementProp>
            <elementProp name="51" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="51">
              <stringProp name="content">818</stringProp>
            </elementProp>
            <elementProp name="102" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="102">
              <stringProp name="content">${balanceInq_accountNumber}</stringProp>
              <stringProp name="TestPlan.comments">Account Number</stringProp>
            </elementProp>
          </collectionProp>
        </nz.co.breakpoint.jmeter.iso8583.ISO8583Sampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="++ MiniStatment  ++" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <nz.co.breakpoint.jmeter.iso8583.ISO8583Config guiclass="TestBeanGUI" testclass="nz.co.breakpoint.jmeter.iso8583.ISO8583Config" testname="conf_90_40_1234" enabled="true">
          <stringProp name="classname">NACChannel</stringProp>
          <stringProp name="configKey">configration</stringProp>
          <stringProp name="connectionSelection">connectionSelection.LAST</stringProp>
          <stringProp name="header"></stringProp>
          <stringProp name="host">${hostName}</stringProp>
          <stringProp name="keyPassword"></stringProp>
          <stringProp name="maxConnections">1</stringProp>
          <stringProp name="mtiMapping"></stringProp>
          <stringProp name="packager">F:/MDI-GIT-Performance/MDI_Perf_Repo/bin/scripts/ATM/1987.xml</stringProp>
          <stringProp name="port">${port}</stringProp>
          <stringProp name="requestListener"></stringProp>
          <boolProp name="reuseConnection">true</boolProp>
          <stringProp name="storePassword"></stringProp>
          <collectionProp name="channelConfig"/>
          <stringProp name="keystore"></stringProp>
          <collectionProp name="muxKeyConfig">
            <elementProp name="" elementType="nz.co.breakpoint.jmeter.iso8583.MuxKeyConfigItem">
              <stringProp name="value">7, 11</stringProp>
            </elementProp>
          </collectionProp>
        </nz.co.breakpoint.jmeter.iso8583.ISO8583Config>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="filename">F:/MDI-GIT-Performance/MDI_Perf_Repo/bin/testData/input/ATM/ATM_TestData_miniStatement.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">Pan,accountNumber</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <nz.co.breakpoint.jmeter.iso8583.ISO8583Sampler guiclass="TestBeanGUI" testclass="nz.co.breakpoint.jmeter.iso8583.ISO8583Sampler" testname="++ MiniStatment  ++" enabled="true">
          <stringProp name="configKey">configration</stringProp>
          <stringProp name="header"></stringProp>
          <stringProp name="responseCodeField">39</stringProp>
          <stringProp name="successResponseCode">00</stringProp>
          <intProp name="timeout">20000</intProp>
          <stringProp name="trailer"></stringProp>
          <collectionProp name="fields">
            <elementProp name="0" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="0">
              <stringProp name="content">0200</stringProp>
            </elementProp>
            <elementProp name="2" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="2">
              <stringProp name="content">${Pan}</stringProp>
            </elementProp>
            <elementProp name="3" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="3">
              <stringProp name="content">350000</stringProp>
            </elementProp>
            <elementProp name="4" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="4">
              <stringProp name="content">000000000000</stringProp>
            </elementProp>
            <elementProp name="5" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="5">
              <stringProp name="content">000000000000</stringProp>
            </elementProp>
            <elementProp name="6" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="6">
              <stringProp name="content">000000000000</stringProp>
            </elementProp>
            <elementProp name="7" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="7">
              <stringProp name="content">${__time(MMddHHmmss,)}</stringProp>
            </elementProp>
            <elementProp name="11" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="11">
              <stringProp name="content">${__Random(000000,999999)}</stringProp>
            </elementProp>
            <elementProp name="12" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="12">
              <stringProp name="content">${__time(HHmmss,)}</stringProp>
            </elementProp>
            <elementProp name="13" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="13">
              <stringProp name="content">${__time(MMdd,)}</stringProp>
            </elementProp>
            <elementProp name="19" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="19">
              <stringProp name="content">818</stringProp>
            </elementProp>
            <elementProp name="22" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="22">
              <stringProp name="content">051</stringProp>
            </elementProp>
            <elementProp name="26" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="26">
              <stringProp name="content">12</stringProp>
            </elementProp>
            <elementProp name="32" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="32">
              <stringProp name="content">3232011088</stringProp>
            </elementProp>
            <elementProp name="37" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="37">
              <stringProp name="content">${__Random(000000000000,999999999999)}</stringProp>
            </elementProp>
            <elementProp name="41" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="41">
              <stringProp name="content">02220004</stringProp>
            </elementProp>
            <elementProp name="42" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="42">
              <stringProp name="content">MDI Tower</stringProp>
            </elementProp>
            <elementProp name="43" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="43">
              <stringProp name="content">MDI Tower CAIRO EG</stringProp>
            </elementProp>
            <elementProp name="46" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="46">
              <stringProp name="content">10818D00000050</stringProp>
            </elementProp>
            <elementProp name="49" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="49">
              <stringProp name="content">818</stringProp>
            </elementProp>
            <elementProp name="50" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="50">
              <stringProp name="content">818</stringProp>
            </elementProp>
            <elementProp name="51" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="51">
              <stringProp name="content">818</stringProp>
            </elementProp>
            <elementProp name="102" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="102">
              <stringProp name="content">${accountNumber}</stringProp>
            </elementProp>
          </collectionProp>
        </nz.co.breakpoint.jmeter.iso8583.ISO8583Sampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="++ WithDrawals ++" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="filename">testData\\input\\ATM\\ATM_TestData_withdrawals.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">withdrawals_accountNumber,withdrawals_Pan</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <nz.co.breakpoint.jmeter.iso8583.ISO8583Config guiclass="TestBeanGUI" testclass="nz.co.breakpoint.jmeter.iso8583.ISO8583Config" testname="conf_90_40_1234" enabled="true">
          <stringProp name="classname">NACChannel</stringProp>
          <stringProp name="configKey">configration</stringProp>
          <stringProp name="connectionSelection">connectionSelection.LAST</stringProp>
          <stringProp name="header"></stringProp>
          <stringProp name="host">${hostName}</stringProp>
          <stringProp name="keyPassword"></stringProp>
          <stringProp name="maxConnections">1</stringProp>
          <stringProp name="mtiMapping"></stringProp>
          <stringProp name="packager">F:/MDI-GIT-Performance/MDI_Perf_Repo/bin/scripts/ATM/1987.xml</stringProp>
          <stringProp name="port">${port}</stringProp>
          <stringProp name="requestListener"></stringProp>
          <boolProp name="reuseConnection">true</boolProp>
          <stringProp name="storePassword"></stringProp>
          <collectionProp name="channelConfig"/>
          <stringProp name="keystore"></stringProp>
          <collectionProp name="muxKeyConfig">
            <elementProp name="" elementType="nz.co.breakpoint.jmeter.iso8583.MuxKeyConfigItem">
              <stringProp name="value">7, 11</stringProp>
            </elementProp>
          </collectionProp>
        </nz.co.breakpoint.jmeter.iso8583.ISO8583Config>
        <hashTree/>
        <nz.co.breakpoint.jmeter.iso8583.ISO8583Sampler guiclass="TestBeanGUI" testclass="nz.co.breakpoint.jmeter.iso8583.ISO8583Sampler" testname="++ WithDrawals ++" enabled="true">
          <stringProp name="configKey">configration</stringProp>
          <stringProp name="header"></stringProp>
          <stringProp name="responseCodeField">39</stringProp>
          <stringProp name="successResponseCode">00</stringProp>
          <intProp name="timeout">20000</intProp>
          <stringProp name="trailer"></stringProp>
          <collectionProp name="fields">
            <elementProp name="0" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="0">
              <stringProp name="content">0200</stringProp>
            </elementProp>
            <elementProp name="2" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="2">
              <stringProp name="content">${withdrawals_Pan}</stringProp>
            </elementProp>
            <elementProp name="3" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="3">
              <stringProp name="content">350000</stringProp>
            </elementProp>
            <elementProp name="4" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="4">
              <stringProp name="content">000000000000</stringProp>
            </elementProp>
            <elementProp name="5" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="5">
              <stringProp name="content">000000000000</stringProp>
            </elementProp>
            <elementProp name="6" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="6">
              <stringProp name="content">000000000000</stringProp>
            </elementProp>
            <elementProp name="7" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="7">
              <stringProp name="content">${__time(MMddHHmmss,)}</stringProp>
            </elementProp>
            <elementProp name="11" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="11">
              <stringProp name="content">${__Random(000000,999999)}</stringProp>
            </elementProp>
            <elementProp name="12" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="12">
              <stringProp name="content">${__time(HHmmss,)}</stringProp>
            </elementProp>
            <elementProp name="13" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="13">
              <stringProp name="content">${__time(MMdd,)}</stringProp>
            </elementProp>
            <elementProp name="15" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="15">
              <stringProp name="content">0707</stringProp>
              <stringProp name="TestPlan.comments">Settlement date</stringProp>
            </elementProp>
            <elementProp name="18" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="18">
              <stringProp name="content">6011</stringProp>
              <stringProp name="TestPlan.comments">MERCHANTS TYPE  </stringProp>
            </elementProp>
            <elementProp name="19" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="19">
              <stringProp name="content">818</stringProp>
            </elementProp>
            <elementProp name="22" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="22">
              <stringProp name="content">051</stringProp>
            </elementProp>
            <elementProp name="26" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="26">
              <stringProp name="content">12</stringProp>
            </elementProp>
            <elementProp name="28" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="28">
              <stringProp name="content">D00000000</stringProp>
            </elementProp>
            <elementProp name="32" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="32">
              <stringProp name="content">616569</stringProp>
            </elementProp>
            <elementProp name="33" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="33">
              <stringProp name="content">123456</stringProp>
            </elementProp>
            <elementProp name="37" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="37">
              <stringProp name="content">${__Random(000000000000,999999999999)}</stringProp>
            </elementProp>
            <elementProp name="39" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="39">
              <stringProp name="content">10</stringProp>
            </elementProp>
            <elementProp name="41" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="41">
              <stringProp name="content">316NC001</stringProp>
            </elementProp>
            <elementProp name="42" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="42">
              <stringProp name="content">EMV TEST INSTIT</stringProp>
            </elementProp>
            <elementProp name="43" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="43">
              <stringProp name="content">EMVB/EMV TEST BRANCH     EMV TEST CITYJP</stringProp>
            </elementProp>
            <elementProp name="46" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="46">
              <stringProp name="content">01826D00001010</stringProp>
            </elementProp>
            <elementProp name="49" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="49">
              <stringProp name="content">818</stringProp>
            </elementProp>
            <elementProp name="50" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="50">
              <stringProp name="content">818</stringProp>
            </elementProp>
            <elementProp name="51" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="51">
              <stringProp name="content">818</stringProp>
            </elementProp>
            <elementProp name="102" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="102">
              <stringProp name="content">${withdrawals_accountNumber}</stringProp>
            </elementProp>
          </collectionProp>
        </nz.co.breakpoint.jmeter.iso8583.ISO8583Sampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="++ Deposits ++" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <nz.co.breakpoint.jmeter.iso8583.ISO8583Config guiclass="TestBeanGUI" testclass="nz.co.breakpoint.jmeter.iso8583.ISO8583Config" testname="conf_90_40_1234" enabled="true">
          <stringProp name="classname">NACChannel</stringProp>
          <stringProp name="configKey">configration</stringProp>
          <stringProp name="connectionSelection">connectionSelection.LAST</stringProp>
          <stringProp name="header"></stringProp>
          <stringProp name="host">${hostName}</stringProp>
          <stringProp name="keyPassword"></stringProp>
          <stringProp name="maxConnections">1</stringProp>
          <stringProp name="mtiMapping"></stringProp>
          <stringProp name="packager">F:/MDI-GIT-Performance/MDI_Perf_Repo/bin/scripts/ATM/1987.xml</stringProp>
          <stringProp name="port">${port}</stringProp>
          <stringProp name="requestListener"></stringProp>
          <boolProp name="reuseConnection">true</boolProp>
          <stringProp name="storePassword"></stringProp>
          <collectionProp name="channelConfig"/>
          <stringProp name="keystore"></stringProp>
          <collectionProp name="muxKeyConfig">
            <elementProp name="" elementType="nz.co.breakpoint.jmeter.iso8583.MuxKeyConfigItem">
              <stringProp name="value">7, 11</stringProp>
            </elementProp>
          </collectionProp>
        </nz.co.breakpoint.jmeter.iso8583.ISO8583Config>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="filename">testData\\input\\ATM\\ATM_TestData_Deposit.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">Deposit_accountNumber,Deposit_Pan</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <nz.co.breakpoint.jmeter.iso8583.ISO8583Sampler guiclass="TestBeanGUI" testclass="nz.co.breakpoint.jmeter.iso8583.ISO8583Sampler" testname="++ Deposits ++" enabled="true">
          <stringProp name="configKey">configration</stringProp>
          <stringProp name="header"></stringProp>
          <stringProp name="responseCodeField">39</stringProp>
          <stringProp name="successResponseCode">00</stringProp>
          <intProp name="timeout">20000</intProp>
          <stringProp name="trailer"></stringProp>
          <collectionProp name="fields">
            <elementProp name="0" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="0">
              <stringProp name="content">0200</stringProp>
            </elementProp>
            <elementProp name="2" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="2">
              <stringProp name="content">${Deposit_Pan}</stringProp>
            </elementProp>
            <elementProp name="3" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="3">
              <stringProp name="content">350000</stringProp>
            </elementProp>
            <elementProp name="4" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="4">
              <stringProp name="content">000000101200</stringProp>
            </elementProp>
            <elementProp name="5" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="5">
              <stringProp name="content">000000101217</stringProp>
            </elementProp>
            <elementProp name="6" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="6">
              <stringProp name="content">000000101200</stringProp>
            </elementProp>
            <elementProp name="7" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="7">
              <stringProp name="content">${__time(MMddHHmmss,)}</stringProp>
            </elementProp>
            <elementProp name="11" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="11">
              <stringProp name="content">${__Random(000000,999999)}</stringProp>
            </elementProp>
            <elementProp name="12" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="12">
              <stringProp name="content">${__time(HHmmss,)}</stringProp>
              <stringProp name="TestPlan.comments">Local transaction time (hhmmss)</stringProp>
            </elementProp>
            <elementProp name="13" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="13">
              <stringProp name="content">${__time(MMdd,)}</stringProp>
              <stringProp name="TestPlan.comments">Local transaction date (MMDD) </stringProp>
            </elementProp>
            <elementProp name="15" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="15">
              <stringProp name="content">0831</stringProp>
              <stringProp name="TestPlan.comments">Settlement date</stringProp>
            </elementProp>
            <elementProp name="18" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="18">
              <stringProp name="content">6011</stringProp>
            </elementProp>
            <elementProp name="19" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="19">
              <stringProp name="content">392</stringProp>
            </elementProp>
            <elementProp name="22" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="22">
              <stringProp name="content">051</stringProp>
            </elementProp>
            <elementProp name="26" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="26">
              <stringProp name="content">12</stringProp>
            </elementProp>
            <elementProp name="28" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="28">
              <stringProp name="content">D00000000</stringProp>
            </elementProp>
            <elementProp name="32" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="32">
              <stringProp name="content">3232011088</stringProp>
            </elementProp>
            <elementProp name="33" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="33">
              <stringProp name="content">123456</stringProp>
            </elementProp>
            <elementProp name="37" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="37">
              <stringProp name="content">${__Random(000000000000,999999999999)}</stringProp>
            </elementProp>
            <elementProp name="39" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="39">
              <stringProp name="content">10</stringProp>
            </elementProp>
            <elementProp name="41" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="41">
              <stringProp name="content">02220004</stringProp>
            </elementProp>
            <elementProp name="42" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="42">
              <stringProp name="content">MDI Tower</stringProp>
            </elementProp>
            <elementProp name="43" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="43">
              <stringProp name="content">MDI Tower CAIRO EG</stringProp>
            </elementProp>
            <elementProp name="46" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="46">
              <stringProp name="content">10818D00000050</stringProp>
            </elementProp>
            <elementProp name="49" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="49">
              <stringProp name="content">818</stringProp>
            </elementProp>
            <elementProp name="50" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="50">
              <stringProp name="content">818</stringProp>
            </elementProp>
            <elementProp name="51" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="51">
              <stringProp name="content">818</stringProp>
            </elementProp>
            <elementProp name="102" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="102">
              <stringProp name="content">${Deposit_accountNumber}</stringProp>
              <stringProp name="TestPlan.comments">Account Number</stringProp>
            </elementProp>
          </collectionProp>
        </nz.co.breakpoint.jmeter.iso8583.ISO8583Sampler>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>

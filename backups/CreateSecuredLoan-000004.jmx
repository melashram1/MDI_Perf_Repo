<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">www.example.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="scheme" elementType="Argument">
            <stringProp name="Argument.name">scheme</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CsvPath" elementType="Argument">
            <stringProp name="Argument.name">CsvPath</stringProp>
            <stringProp name="Argument.value">D:\MDI\Perfomance\AUTHOR.OUTPUTS.csv</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">www.example.com</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="jp@gc - Ultimate Thread Group" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="-952475434">
            <stringProp name="49">1</stringProp>
            <stringProp name="0">0</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="48687">120</stringProp>
            <stringProp name="48">0</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="User Defined Variables" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">CutID, nationalityId, givenName, displayName, customerName, language, dateOfBirth, title, sectorId, gender, street, legalId, legalDocumentName</stringProp>
          <stringProp name="filename">C:/Users/Mai.El-Shimy/Documents/API.createOnboardingCustomer1.csv</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="variableNames"></stringProp>
        </CSVDataSet>
        <hashTree/>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="++Create On Boarding Customer++" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="01_API_create_Onboarding_Customer " enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOnboardingCustomer -12" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
          		&quot;header&quot;:&#xd;
                  {&#xd;
                    &quot;override&quot;: {&#xd;
                          &quot;overrideDetails&quot;: [&#xd;
                              {&#xd;
                                  &quot;code&quot;: &quot;O-10203&quot;,&#xd;
                                  &quot;description&quot;: &quot;POSSIBLE DUPLICATE CONTRACT 9787&quot;,&#xd;
                                  &quot;id&quot;: &quot;DUP.CONTRACT&quot;,&#xd;
                             &quot;type&quot;: &quot;Override&quot;&#xd;
                              }        ]    }&#xd;
          		},&quot;body&quot;: {&#xd;
          		        &quot;language&quot;: &quot;${language}&quot;,&#xd;
          		        &quot;sectorId&quot;: &quot;${sectorId}&quot;,&#xd;
          	&quot;dateOfBirth&quot;: &quot;${dateOfBirth}&quot;,&#xd;
          		        &quot;nationalityId&quot;: &quot;${nationalityId}&quot;,&#xd;
          		       &quot;gender&quot;: &quot;${gender}&quot;,&#xd;
          		       &quot;title&quot;: &quot;${title}&quot;,&#xd;
          		        &quot;givenName&quot;: &quot;  ${givenName}  &quot;,&#xd;
          	        &quot;streets&quot;: [&#xd;
          		            {&#xd;
          		               &quot;street&quot;: &quot;  ${street} &quot;&#xd;
          	           }&#xd;
          		        ],&#xd;
          	       &quot;customerNames&quot;: [&#xd;
          	&#xd;
          	{&#xd;
          		               &quot;customerName&quot;: &quot;  ${customerName}  &quot;&#xd;
          		          },&#xd;
          	&#xd;
          	         {&#xd;
               }&#xd;
          &#xd;
          	       ],&#xd;
          	&#xd;
          	       &quot;displayNames&quot;:[&#xd;
          	&#xd;
          	         {&#xd;
          	&#xd;
          	               &quot;displayName&quot;: &quot; ${displayName} &quot;&#xd;
          	&#xd;
          		            }],&#xd;
          	&#xd;
          		 &quot;legalDetails&quot;: [&#xd;
          	      {&#xd;
          		   &quot;legalId&quot;:&quot;${legalId}&quot;,&#xd;
          		&quot;legalDocumentName&quot;: &quot;${legalDocumentName}&quot;,&#xd;
          	&quot;legalIssueDate&quot;: &quot;${legalIssueDate}&quot;&#xd;
          		 }&#xd;
          		   ],&#xd;
          		&quot;riskLevel&quot;: &quot;${riskLevel}&quot;&#xd;
   }&#xd;
          	&#xd;
          		}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">10.10.90.40</stringProp>
              <stringProp name="HTTPSampler.port">9446</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/MDIDELIV/api/v1.0.0/party/customers/onboarding/customer/${CutID}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="companyId" elementType="Header">
                    <stringProp name="Header.name">companyId</stringProp>
                    <stringProp name="Header.value">EG0011001</stringProp>
                  </elementProp>
                  <elementProp name="validate_only" elementType="Header">
                    <stringProp name="Header.name">validate_only</stringProp>
                    <stringProp name="Header.value"></stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">4d71d941-15d9-44ca-944a-26c07408e7a9</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.31.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
                <stringProp name="JSON_PATH">$.header.status</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames"></stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs"></stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">testData/API.createOnboardingCustomer1.csv</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="variableNames">CutID ,nationalityId ,givenName ,displayName ,customerName ,language ,dateOfBirth ,title ,sectorId ,gender ,street ,legalId ,legalDocumentName ,legalIssueDate ,riskLevel </stringProp>
                <boolProp name="ignoreFirstLine">true</boolProp>
                <stringProp name="delimiter">,</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
              </CSVDataSet>
              <hashTree/>
            </hashTree>
            <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
              <collectionProp name="AuthManager.auth_list">
                <elementProp name="" elementType="Authorization">
                  <stringProp name="Authorization.url">https://10.10.90.40:9446/MDIDELIV/api/v1.0.0/party/customers/onboarding/customer/</stringProp>
                  <stringProp name="Authorization.username">AUTOMATION.1</stringProp>
                  <stringProp name="Authorization.password">P@ssw0rd</stringProp>
                  <stringProp name="Authorization.domain"></stringProp>
                  <stringProp name="Authorization.realm"></stringProp>
                </elementProp>
              </collectionProp>
              <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
            </AuthManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="+++CreateDefaultCurrentAccount+++" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="createdefaultcurrentaccount" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createdefaultcurrentaccount-27" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{ &quot;header&quot;:{&#xd;
    &quot;override&quot;: {&#xd;
        &quot;overrideDetails&quot;: [&#xd;
            {&#xd;
                &quot;code&quot;: &quot;O-12003&quot;,&#xd;
                &quot;description&quot;: &quot;Arrangement Currency Different From Charge Currency&quot;,&#xd;
                &quot;id&quot;: &quot;AA.CHG.ARR.CCY.DIFF.CHG.CCY&quot;,&#xd;
                &quot;type&quot;: &quot;Override&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;code&quot;: &quot;O-12187&quot;,&#xd;
                &quot;description&quot;: &quot;Statement would get generated both on schedule date and the date defined in statement condition for CRINTEREST DRINTEREST&quot;,&#xd;
                &quot;id&quot;: &quot;AA.PS.DUPLICATE.STATEMENT.GENERATE&quot;,&#xd;
                &quot;type&quot;: &quot;Override&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;code&quot;: &quot;O-12005&quot;,&#xd;
                &quot;options&quot;: [&#xd;
                    &quot;RECEIVED&quot;,&#xd;
                    &quot;NOT RECEIVED&quot;&#xd;
                ],&#xd;
                &quot;description&quot;: &quot;Have you received Account Opening Agreement/AAA*212 from 200018}RECEIVED_NOT RECEIVED&quot;,&#xd;
                &quot;id&quot;: &quot;DM.CONFIRM.DOC&quot;,&#xd;
                &quot;type&quot;: &quot;Warning&quot;,&#xd;
                &quot;responseCode&quot;: &quot;RECEIVED&quot;&#xd;
            }&#xd;
        ]&#xd;
    }&#xd;
},&#xd;
    &quot;body&quot;: {&#xd;
		&quot;parties&quot;: [&#xd;
			{&#xd;
				&quot;partyId&quot;: &quot;1000004633&quot;&#xd;
			}&#xd;
		],&#xd;
		&quot;productId&quot;: &quot;MDI.CURRENT.DEFAULT&quot;,&#xd;
		&quot;currencyId&quot;: &quot;EGP&quot;&#xd;
	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">10.10.90.40</stringProp>
              <stringProp name="HTTPSampler.port">9446</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/MDICORE/api/v2.0.0/holdings/accounts/currentAccounts</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">25ed2ccd-6d7e-432c-bad7-10608714a50e</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.31.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
                <stringProp name="JSON_PATH">$.header.status</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
              <collectionProp name="AuthManager.auth_list">
                <elementProp name="" elementType="Authorization">
                  <stringProp name="Authorization.url">https://10.10.90.40:9446/MDICORE/api/v2.0.0/holdings/accounts/</stringProp>
                  <stringProp name="Authorization.username">INPUTT</stringProp>
                  <stringProp name="Authorization.password">123456</stringProp>
                  <stringProp name="Authorization.domain"></stringProp>
                  <stringProp name="Authorization.realm"></stringProp>
                </elementProp>
              </collectionProp>
              <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
            </AuthManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="+++Payment_Order+++" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="CreatePaymentOrder" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreatePaymentOrder-1" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{   &quot;header&quot;:&#xd;
&#xd;
{&#xd;
&#xd;
&quot;override&quot;: {&#xd;
&#xd;
        &quot;overrideDetails&quot;: [&#xd;
&#xd;
            {&#xd;
&#xd;
                &quot;description&quot;: &quot;Post No Debits&quot;,&#xd;
&#xd;
                &quot;id&quot;: &quot;Post No Debits&quot;,&#xd;
&#xd;
                &quot;type&quot;: &quot;Override&quot;&#xd;
&#xd;
            },&#xd;
&#xd;
            {&#xd;
&#xd;
                &quot;description&quot;: &quot;Post No Entries&quot;,&#xd;
&#xd;
                &quot;id&quot;: &quot;Post No Entries&quot;,&#xd;
&#xd;
                &quot;type&quot;: &quot;Override&quot;&#xd;
&#xd;
            },&#xd;
&#xd;
            {&#xd;
&#xd;
                &quot;description&quot;: &quot;KYC Update&quot;,&#xd;
&#xd;
                &quot;id&quot;: &quot;KYC Update&quot;,&#xd;
&#xd;
                &quot;type&quot;: &quot;Override&quot;&#xd;
&#xd;
            },&#xd;
&#xd;
            {&#xd;
&#xd;
                &quot;code&quot;: &quot;O-12623&quot;,&#xd;
&#xd;
                &quot;description&quot;: &quot;Balance unavailable in debit account, Payment will be moved to credit risk queue for approval post authorisation&quot;,&#xd;
&#xd;
                &quot;id&quot;: &quot;PI-UNAUTH.OVERDRAFT.FOR.ONSUBMIT&quot;,&#xd;
&#xd;
                &quot;type&quot;: &quot;Override&quot;&#xd;
&#xd;
            }&#xd;
&#xd;
            &#xd;
&#xd;
        ]&#xd;
&#xd;
    }&#xd;
&#xd;
},&#xd;
&#xd;
    &quot;body&quot;:&#xd;
&#xd;
    {&#xd;
&#xd;
         &quot;amount&quot;: 600,&#xd;
&#xd;
&#xd;
&#xd;
        &quot;orderingCustomerId&quot;: &quot;1000001994&quot;,&#xd;
&#xd;
&#xd;
&#xd;
        &quot;debitAccountId&quot;: &quot;EGP100060001&quot;,&#xd;
&#xd;
&#xd;
&#xd;
        &quot;creditAccountId&quot;: &quot;100000105893&quot;,&#xd;
&#xd;
&#xd;
&#xd;
        &quot;paymentOrderProductId&quot;: &quot;ACTRF&quot;,&#xd;
&#xd;
        &quot;apiChannel&quot;:&quot;HAMZA&quot;&#xd;
&#xd;
&#xd;
&#xd;
    }&#xd;
&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">10.10.90.40</stringProp>
              <stringProp name="HTTPSampler.port">9446</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/MDIDELIV/api/v1.0.0/order/createpaymentorder</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="companyId" elementType="Header">
                    <stringProp name="Header.name">companyId</stringProp>
                    <stringProp name="Header.value">EG0011001</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">7bf6b137-c8a4-4f99-8140-d47c282b7ace</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.31.1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="paymentOrder CSV Data Set Config" enabled="true">
                <stringProp name="delimiter">,</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="filename">D:/MDI Performance/Loans Scripts/CreatePaymentOrder.csv</stringProp>
                <boolProp name="ignoreFirstLine">true</boolProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="variableNames">amount ,CustomerID ,DebitAccountID ,CreditAccountID </stringProp>
              </CSVDataSet>
              <hashTree/>
            </hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.header.status</stringProp>
              <stringProp name="EXPECTED_VALUE">success</stringProp>
              <boolProp name="JSONVALIDATION">false</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
              <collectionProp name="AuthManager.auth_list">
                <elementProp name="" elementType="Authorization">
                  <stringProp name="Authorization.url">https://10.10.90.40:9446/MDIDELIV/api/v1.0.0/order/</stringProp>
                  <stringProp name="Authorization.username">AUTHOR</stringProp>
                  <stringProp name="Authorization.password">123456</stringProp>
                  <stringProp name="Authorization.domain"></stringProp>
                  <stringProp name="Authorization.realm"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Authorization">
                  <stringProp name="Authorization.url">https://10.10.90.40:9446/MDIDELIV/api/v1.0.0/holdings/accountClosure/</stringProp>
                  <stringProp name="Authorization.username">INPUTT</stringProp>
                  <stringProp name="Authorization.password">123456</stringProp>
                  <stringProp name="Authorization.domain"></stringProp>
                  <stringProp name="Authorization.realm"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Authorization">
                  <stringProp name="Authorization.url">https://10.10.90.40:9446/MDICORE/api/v1.0.0/holdings/customers/1000004633/</stringProp>
                  <stringProp name="Authorization.username">INPUTT</stringProp>
                  <stringProp name="Authorization.password">123456</stringProp>
                  <stringProp name="Authorization.domain"></stringProp>
                  <stringProp name="Authorization.realm"></stringProp>
                </elementProp>
              </collectionProp>
              <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
            </AuthManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="+++Create_TD+++" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="CreateTD" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreateTD-1" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;header&quot;:{&#xd;
         &quot;override&quot;: {&#xd;
        &quot;overrideDetails&quot;: [&#xd;
            {&#xd;
                &quot;code&quot;: &quot;O-12443&quot;,&#xd;
                &quot;description&quot;: &quot;Entered value is lesser than minimum negotiation value of 5000 by 4000 in field AMOUNT.1.1&quot;,&#xd;
                &quot;id&quot;: &quot;AA.ECT.MIN.BELOW&quot;,&#xd;
                &quot;type&quot;: &quot;Override&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;code&quot;: &quot;O-10985&quot;,&#xd;
                &quot;description&quot;: &quot;Maturity Date is not a Working Day&quot;,&#xd;
                &quot;id&quot;: &quot;AA.MATURITY.DATE.NOT.WORKING.DAY&quot;,&#xd;
                &quot;type&quot;: &quot;Override&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;code&quot;: &quot;O-11270&quot;,&#xd;
                &quot;description&quot;: &quot;Customer 2000000019 - Post No Debits&quot;,&#xd;
                &quot;id&quot;: &quot;POSTING.RESTRICT.CUST&quot;,&#xd;
                &quot;type&quot;: &quot;Override&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;code&quot;: &quot;O-11622&quot;,&#xd;
                &quot;description&quot;: &quot;Account 200000003092 - Customer Deceased&quot;,&#xd;
                &quot;id&quot;: &quot;POSTING.RESTRICT&quot;,&#xd;
                &quot;type&quot;: &quot;Override&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;code&quot;: &quot;O-12005&quot;,&#xd;
                &quot;options&quot;: [&#xd;
                    &quot;RECEIVED&quot;,&#xd;
                    &quot;NOT RECEIVED&quot;&#xd;
                ],&#xd;
                &quot;description&quot;: &quot;Have you received Deposit Agreement/AAA*207 from 2000000019}RECEIVED_NOT RECEIVED&quot;,&#xd;
                &quot;id&quot;: &quot;DM.CONFIRM.DOC&quot;,&#xd;
                &quot;type&quot;: &quot;Warning&quot;,&#xd;
                &quot;responseCode&quot;:&quot;RECEIVED&quot;&#xd;
            }&#xd;
        ]&#xd;
    }&#xd;
    },&#xd;
	&quot;body&quot;: {&#xd;
		&quot;currency&quot;: &quot;${Currency}&quot;,&#xd;
		&quot;productId&quot;: &quot;MDI.TD.3M.INT.MONTHLY&quot;,&#xd;
		&quot;partyIds&quot;: [&#xd;
			{&#xd;
				&quot;partyId&quot;: &quot;${Customer}&quot;&#xd;
			}&#xd;
		],&#xd;
		&quot;commitment&quot;: {&#xd;
			&quot;amount&quot;: &quot;${Amount}&quot;&#xd;
		},&#xd;
		&quot;settlement&quot;: {&#xd;
			&quot;assocSettlement&quot;: [&#xd;
				{&#xd;
					&quot;reference&quot;: [&#xd;
						{&#xd;
							&quot;payinAccount&quot;: &quot;${Payinaccount}&quot;&#xd;
						}&#xd;
					]&#xd;
				}&#xd;
			],&#xd;
			&quot;payout&quot;: [&#xd;
				{&#xd;
					&quot;property&quot;: [&#xd;
						{&#xd;
							&quot;payoutAccount&quot;: &quot;${Payoutaccount1}&quot;&#xd;
						}&#xd;
					]&#xd;
				},&#xd;
				{&#xd;
					&quot;property&quot;: [&#xd;
						{&#xd;
							&quot;payoutAccount&quot;: &quot;${Payoutaccount2}&quot;&#xd;
						}&#xd;
					]&#xd;
				}&#xd;
			]&#xd;
		}&#xd;
	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">10.10.90.40</stringProp>
              <stringProp name="HTTPSampler.port">9446</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/MDICORE/api/v2.0.0/holdings/deposits/termDeposits</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
                <stringProp name="JSON_PATH">$.header.status</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">//Default separator
char SEPARATOR = &apos;,&apos;;

//get path of csv file (creates new one if its not exists)
//String csvFile = &quot;C:\\Users\\Qcentris\\Documents\\JmeterFInalTestPlans\\res\\ResponsesResults.csv&quot;; // for example &apos;/User/Downloads/blabla.csv&apos;
//String csvFile = &quot;E:\\NBKRUN06102020\\TxnRefrences&quot; for local use
//String csvFile = &quot;D:\\New folder (2)\\New folder\\TxnRefrences&quot; // for the actual run on machine 19
String csvFile = &quot;&quot;+vars.get(&quot;CsvPath&quot;)
//String csvFile = &quot;D:\\Desktop 09092020\\nbk\\20102020\\Preparation\\TxnRefrences.csv&quot;

def params = [&quot;Arrangment ID&quot;,vars.get(&quot;ArrangmentID&quot;).toString(),&quot;&quot;,&quot;&quot;];

//function write line in csv
def writeLine(FileWriter writer, List&lt;String&gt; parameters, char separator) throws IOException {
    boolean firstParameter = true;
    StringBuilder stringBuilder = new StringBuilder();
    String parameter = &quot; &quot;;

    for (int i = 0; i &lt; parameters.size(); i++) {
        //get param
        parameter = parameters[i];
        log.info(parameter);

        //if the first param in the line, separator is not needed
        if (!firstParameter) {
            stringBuilder.append(separator);
        }

        //Add param to line
        stringBuilder.append(parameter);

        firstParameter = false;
    }

    //prepare file to next line
    stringBuilder.append(&quot;\n&quot;);

    //add to file the line
    log.info(stringBuilder.toString());
    writer.append(stringBuilder.toString());
}

FileWriter fileWriter = new FileWriter(csvFile, true);
writeLine(fileWriter, params, SEPARATOR);

//proper close to file
fileWriter.flush();
fileWriter.close();</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Assertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">ArrangmentID</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">body.arrangementActivity.arrangmentId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="companyId" elementType="Header">
                    <stringProp name="Header.name">companyId</stringProp>
                    <stringProp name="Header.value">EG0011001</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">6ba9a857-9078-40da-aace-d4dbe29cdab8</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.31.1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
                <collectionProp name="AuthManager.auth_list">
                  <elementProp name="" elementType="Authorization">
                    <stringProp name="Authorization.url">https://10.10.90.40:9446/MDICORE/api/v2.0.0/holdings/deposits/</stringProp>
                    <stringProp name="Authorization.username">INPUTT</stringProp>
                    <stringProp name="Authorization.password">123456</stringProp>
                    <stringProp name="Authorization.domain"></stringProp>
                    <stringProp name="Authorization.realm"></stringProp>
                  </elementProp>
                </collectionProp>
                <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
              </AuthManager>
              <hashTree/>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config_input" enabled="true">
                <stringProp name="delimiter">,</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="filename">C:/Users/Smartec/Documents/jmeter/APIs/CreateTD.csv</stringProp>
                <boolProp name="ignoreFirstLine">true</boolProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
                <boolProp name="stopThread">true</boolProp>
                <stringProp name="variableNames">Currency,Customer,Amount,Payinaccount ,Payoutaccount1 ,Payoutaccount2</stringProp>
              </CSVDataSet>
              <hashTree/>
              <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="host" elementType="Argument">
                    <stringProp name="Argument.name">host</stringProp>
                    <stringProp name="Argument.value">www.example.com</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="scheme" elementType="Argument">
                    <stringProp name="Argument.name">scheme</stringProp>
                    <stringProp name="Argument.value">https</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="CsvPath" elementType="Argument">
                    <stringProp name="Argument.name">CsvPath</stringProp>
                    <stringProp name="Argument.value">C:\Users\Smartec\Documents\jmeter\APIs\TD_output.csv</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </Arguments>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">20</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <longProp name="ThreadGroup.start_time">1370726934000</longProp>
        <longProp name="ThreadGroup.end_time">1370726934000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="User Defined Variables" enabled="false">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">CutID, nationalityId, givenName, displayName, customerName, language, dateOfBirth, title, sectorId, gender, street, legalId, legalDocumentName</stringProp>
          <stringProp name="filename">C:/Users/Mai.El-Shimy/Documents/API.createOnboardingCustomer1.csv</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="variableNames"></stringProp>
        </CSVDataSet>
        <hashTree/>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="++Create On Boarding Customer++" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="01_API_create_Onboarding_Customer " enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOnboardingCustomer -12" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
          		&quot;header&quot;:&#xd;
                  {&#xd;
                    &quot;override&quot;: {&#xd;
                          &quot;overrideDetails&quot;: [&#xd;
                              {&#xd;
                                  &quot;code&quot;: &quot;O-10203&quot;,&#xd;
                                  &quot;description&quot;: &quot;POSSIBLE DUPLICATE CONTRACT 9787&quot;,&#xd;
                                  &quot;id&quot;: &quot;DUP.CONTRACT&quot;,&#xd;
                             &quot;type&quot;: &quot;Override&quot;&#xd;
                              }        ]    }&#xd;
          		},&quot;body&quot;: {&#xd;
          		        &quot;language&quot;: &quot;${language}&quot;,&#xd;
          		        &quot;sectorId&quot;: &quot;${sectorId}&quot;,&#xd;
          	&quot;dateOfBirth&quot;: &quot;${dateOfBirth}&quot;,&#xd;
          		        &quot;nationalityId&quot;: &quot;${nationalityId}&quot;,&#xd;
          		       &quot;gender&quot;: &quot;${gender}&quot;,&#xd;
          		       &quot;title&quot;: &quot;${title}&quot;,&#xd;
          		        &quot;givenName&quot;: &quot;  ${givenName}  &quot;,&#xd;
          	        &quot;streets&quot;: [&#xd;
          		            {&#xd;
          		               &quot;street&quot;: &quot;  ${street} &quot;&#xd;
          	           }&#xd;
          		        ],&#xd;
          	       &quot;customerNames&quot;: [&#xd;
          	&#xd;
          	{&#xd;
          		               &quot;customerName&quot;: &quot;  ${customerName}  &quot;&#xd;
          		          },&#xd;
          	&#xd;
          	         {&#xd;
               }&#xd;
          &#xd;
          	       ],&#xd;
          	&#xd;
          	       &quot;displayNames&quot;:[&#xd;
          	&#xd;
          	         {&#xd;
          	&#xd;
          	               &quot;displayName&quot;: &quot; ${displayName} &quot;&#xd;
          	&#xd;
          		            }],&#xd;
          	&#xd;
          		 &quot;legalDetails&quot;: [&#xd;
          	      {&#xd;
          		   &quot;legalId&quot;:&quot;${legalId}&quot;,&#xd;
          		&quot;legalDocumentName&quot;: &quot;${legalDocumentName}&quot;,&#xd;
          	&quot;legalIssueDate&quot;: &quot;${legalIssueDate}&quot;&#xd;
          		 }&#xd;
          		   ],&#xd;
          		&quot;riskLevel&quot;: &quot;${riskLevel}&quot;&#xd;
   }&#xd;
          	&#xd;
          		}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">10.10.90.40</stringProp>
              <stringProp name="HTTPSampler.port">9446</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/MDIDELIV/api/v1.0.0/party/customers/onboarding/customer/${CIF}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="companyId" elementType="Header">
                    <stringProp name="Header.name">companyId</stringProp>
                    <stringProp name="Header.value">EG0011001</stringProp>
                  </elementProp>
                  <elementProp name="validate_only" elementType="Header">
                    <stringProp name="Header.name">validate_only</stringProp>
                    <stringProp name="Header.value"></stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">4d71d941-15d9-44ca-944a-26c07408e7a9</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.31.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
                <stringProp name="JSON_PATH">$.header.status</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">C:/Users/Mariam.ElAshram/Downloads/API.createOnboardingCustomer1.csv</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="variableNames">nationalityId ,givenName ,displayName ,customerName ,language ,dateOfBirth ,title ,sectorId ,gender ,street ,legalId ,legalDocumentName ,legalIssueDate ,riskLevel </stringProp>
                <boolProp name="ignoreFirstLine">true</boolProp>
                <stringProp name="delimiter">,</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
              </CSVDataSet>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="CIF Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">CIF</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.header.id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="66720">CIF</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="1502995728">
                    <stringProp name="-187030026">13${__RandomString(8,1234567890,)}</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
            </hashTree>
            <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
              <collectionProp name="AuthManager.auth_list">
                <elementProp name="" elementType="Authorization">
                  <stringProp name="Authorization.url">https://10.10.90.40:9446/MDIDELIV/api/v1.0.0/party/customers/onboarding/customer/</stringProp>
                  <stringProp name="Authorization.username">AUTOMATION.1</stringProp>
                  <stringProp name="Authorization.password">P@ssw0rd</stringProp>
                  <stringProp name="Authorization.domain"></stringProp>
                  <stringProp name="Authorization.realm"></stringProp>
                </elementProp>
              </collectionProp>
              <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
            </AuthManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="+++CreateDefaultCurrentAccount+++" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="createdefaultcurrentaccount" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createdefaultcurrentaccount-27" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{ &quot;header&quot;:{&#xd;
    &quot;override&quot;: {&#xd;
        &quot;overrideDetails&quot;: [&#xd;
            {&#xd;
                &quot;code&quot;: &quot;O-12003&quot;,&#xd;
                &quot;description&quot;: &quot;Arrangement Currency Different From Charge Currency&quot;,&#xd;
                &quot;id&quot;: &quot;AA.CHG.ARR.CCY.DIFF.CHG.CCY&quot;,&#xd;
                &quot;type&quot;: &quot;Override&quot;&#xd;
            },&#xd;
            {&#xd;
            	 &quot;code&quot;: &quot;O-12124&quot;,&#xd;
                &quot;description&quot;: &quot;Arrangement Customer 1000000321 is in DORMANT() Status&quot;,&#xd;
                &quot;id&quot;: &quot;AA-CUSTOMER.IS.DORMANT&quot;,&#xd;
                &quot;type&quot;: &quot;Override&quot;&#xd;
                },&#xd;
            {&#xd;
                &quot;code&quot;: &quot;O-12187&quot;,&#xd;
                &quot;description&quot;: &quot;Statement would get generated both on schedule date and the date defined in statement condition for CRINTEREST DRINTEREST&quot;,&#xd;
                &quot;id&quot;: &quot;AA.PS.DUPLICATE.STATEMENT.GENERATE&quot;,&#xd;
                &quot;type&quot;: &quot;Override&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;code&quot;: &quot;O-12005&quot;,&#xd;
                &quot;options&quot;: [&#xd;
                    &quot;RECEIVED&quot;,&#xd;
                    &quot;NOT RECEIVED&quot;&#xd;
                ],&#xd;
                &quot;description&quot;: &quot;Have you received Account Opening Agreement/AAA*212 from 200018}RECEIVED_NOT RECEIVED&quot;,&#xd;
                &quot;id&quot;: &quot;DM.CONFIRM.DOC&quot;,&#xd;
                &quot;type&quot;: &quot;Warning&quot;,&#xd;
                &quot;responseCode&quot;: &quot;RECEIVED&quot;&#xd;
            }&#xd;
        ]&#xd;
    }&#xd;
},&#xd;
    &quot;body&quot;: {&#xd;
		&quot;parties&quot;: [&#xd;
			{&#xd;
				&quot;partyId&quot;: &quot;${CIF}&quot;&#xd;
			}&#xd;
		],&#xd;
		&quot;productId&quot;: &quot;MDI.CURRENT.DEFAULT&quot;,&#xd;
		&quot;currencyId&quot;: &quot;EGP&quot;&#xd;
	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">10.10.90.40</stringProp>
              <stringProp name="HTTPSampler.port">9446</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/MDICORE/api/v2.0.0/holdings/accounts/currentAccounts</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout">30000</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">25ed2ccd-6d7e-432c-bad7-10608714a50e</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.31.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
                <stringProp name="JSON_PATH">$.header.status</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">accountId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$..accountId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
              <collectionProp name="AuthManager.auth_list">
                <elementProp name="" elementType="Authorization">
                  <stringProp name="Authorization.url">https://10.10.90.40:9446/MDICORE/api/v2.0.0/holdings/accounts/</stringProp>
                  <stringProp name="Authorization.username">INPUTT</stringProp>
                  <stringProp name="Authorization.password">123456</stringProp>
                  <stringProp name="Authorization.domain"></stringProp>
                  <stringProp name="Authorization.realm"></stringProp>
                </elementProp>
              </collectionProp>
              <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
            </AuthManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="+++Payment_Order+++" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="CreatePaymentOrder" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreatePaymentOrder-1" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{   &quot;header&quot;:&#xd;
&#xd;
{&#xd;
&#xd;
&quot;override&quot;: {&#xd;
&#xd;
        &quot;overrideDetails&quot;: [&#xd;
&#xd;
            {&#xd;
&#xd;
                &quot;description&quot;: &quot;Post No Debits&quot;,&#xd;
&#xd;
                &quot;id&quot;: &quot;Post No Debits&quot;,&#xd;
&#xd;
                &quot;type&quot;: &quot;Override&quot;&#xd;
&#xd;
            },&#xd;
&#xd;
            {&#xd;
&#xd;
                &quot;description&quot;: &quot;Post No Entries&quot;,&#xd;
&#xd;
                &quot;id&quot;: &quot;Post No Entries&quot;,&#xd;
&#xd;
                &quot;type&quot;: &quot;Override&quot;&#xd;
&#xd;
            },&#xd;
&#xd;
            {&#xd;
&#xd;
                &quot;description&quot;: &quot;KYC Update&quot;,&#xd;
&#xd;
                &quot;id&quot;: &quot;KYC Update&quot;,&#xd;
&#xd;
                &quot;type&quot;: &quot;Override&quot;&#xd;
&#xd;
            },&#xd;
&#xd;
            {&#xd;
&#xd;
                &quot;code&quot;: &quot;O-12623&quot;,&#xd;
&#xd;
                &quot;description&quot;: &quot;Balance unavailable in debit account, Payment will be moved to credit risk queue for approval post authorisation&quot;,&#xd;
&#xd;
                &quot;id&quot;: &quot;PI-UNAUTH.OVERDRAFT.FOR.ONSUBMIT&quot;,&#xd;
&#xd;
                &quot;type&quot;: &quot;Override&quot;&#xd;
&#xd;
            }&#xd;
&#xd;
            &#xd;
&#xd;
        ]&#xd;
&#xd;
    }&#xd;
&#xd;
},&#xd;
&#xd;
    &quot;body&quot;:&#xd;
&#xd;
    {&#xd;
&#xd;
         &quot;amount&quot;: &quot;${amount}&quot;,&#xd;
&#xd;
&#xd;
&#xd;
        &quot;orderingCustomerId&quot;: &quot;${CIF}&quot;,&#xd;
&#xd;
&#xd;
&#xd;
        &quot;debitAccountId&quot;: &quot;EGP100060001&quot;,&#xd;
&#xd;
&#xd;
&#xd;
        &quot;creditAccountId&quot;: &quot;${accountId}&quot;,&#xd;
&#xd;
&#xd;
&#xd;
        &quot;paymentOrderProductId&quot;: &quot;ACTRF&quot;,&#xd;
&#xd;
        &quot;apiChannel&quot;:&quot;HAMZA&quot;&#xd;
&#xd;
&#xd;
&#xd;
    }&#xd;
&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">10.10.90.40</stringProp>
              <stringProp name="HTTPSampler.port">9446</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/MDIDELIV/api/v1.0.0/order/createpaymentorder</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="companyId" elementType="Header">
                    <stringProp name="Header.name">companyId</stringProp>
                    <stringProp name="Header.value">EG0011001</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">7bf6b137-c8a4-4f99-8140-d47c282b7ace</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.31.1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="paymentOrder CSV Data Set Config" enabled="false">
                <stringProp name="delimiter">,</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="filename">D:/MDI Performance/Loans Scripts/CreatePaymentOrder.csv</stringProp>
                <boolProp name="ignoreFirstLine">true</boolProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="variableNames">amount </stringProp>
              </CSVDataSet>
              <hashTree/>
              <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
                <stringProp name="maximumValue">6000</stringProp>
                <stringProp name="minimumValue">5000</stringProp>
                <stringProp name="outputFormat"></stringProp>
                <boolProp name="perThread">false</boolProp>
                <stringProp name="randomSeed"></stringProp>
                <stringProp name="variableName">amount</stringProp>
              </RandomVariableConfig>
              <hashTree/>
            </hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.header.status</stringProp>
              <stringProp name="EXPECTED_VALUE">success</stringProp>
              <boolProp name="JSONVALIDATION">false</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
              <collectionProp name="AuthManager.auth_list">
                <elementProp name="" elementType="Authorization">
                  <stringProp name="Authorization.url">https://10.10.90.40:9446/MDIDELIV/api/v1.0.0/order/</stringProp>
                  <stringProp name="Authorization.username">AUTHOR</stringProp>
                  <stringProp name="Authorization.password">123456</stringProp>
                  <stringProp name="Authorization.domain"></stringProp>
                  <stringProp name="Authorization.realm"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Authorization">
                  <stringProp name="Authorization.url">https://10.10.90.40:9446/MDIDELIV/api/v1.0.0/holdings/accountClosure/</stringProp>
                  <stringProp name="Authorization.username">INPUTT</stringProp>
                  <stringProp name="Authorization.password">123456</stringProp>
                  <stringProp name="Authorization.domain"></stringProp>
                  <stringProp name="Authorization.realm"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Authorization">
                  <stringProp name="Authorization.url">https://10.10.90.40:9446/MDICORE/api/v1.0.0/holdings/customers/1000004633/</stringProp>
                  <stringProp name="Authorization.username">INPUTT</stringProp>
                  <stringProp name="Authorization.password">123456</stringProp>
                  <stringProp name="Authorization.domain"></stringProp>
                  <stringProp name="Authorization.realm"></stringProp>
                </elementProp>
              </collectionProp>
              <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
            </AuthManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="+++CreateTd+++" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller" enabled="true"/>
          <hashTree>
            <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
              <collectionProp name="AuthManager.auth_list">
                <elementProp name="" elementType="Authorization">
                  <stringProp name="Authorization.url">https://10.10.90.40:9446/MDICORE/api/v2.0.0/holdings/deposits/</stringProp>
                  <stringProp name="Authorization.username">INPUTT</stringProp>
                  <stringProp name="Authorization.password">123456</stringProp>
                  <stringProp name="Authorization.domain"></stringProp>
                  <stringProp name="Authorization.realm"></stringProp>
                </elementProp>
              </collectionProp>
              <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
            </AuthManager>
            <hashTree/>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="createTd" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createTd" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;header&quot;:{&#xd;
         &quot;override&quot;: {&#xd;
        &quot;overrideDetails&quot;: [&#xd;
            {&#xd;
                &quot;code&quot;: &quot;O-12443&quot;,&#xd;
                &quot;description&quot;: &quot;Entered value is lesser than minimum negotiation value of 5000 by 4000 in field AMOUNT.1.1&quot;,&#xd;
                &quot;id&quot;: &quot;AA.ECT.MIN.BELOW&quot;,&#xd;
                &quot;type&quot;: &quot;Override&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;code&quot;: &quot;O-10985&quot;,&#xd;
                &quot;description&quot;: &quot;Maturity Date is not a Working Day&quot;,&#xd;
                &quot;id&quot;: &quot;AA.MATURITY.DATE.NOT.WORKING.DAY&quot;,&#xd;
                &quot;type&quot;: &quot;Override&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;code&quot;: &quot;O-11270&quot;,&#xd;
                &quot;description&quot;: &quot;Customer ${CIF} - Post No Debits&quot;,&#xd;
                &quot;id&quot;: &quot;POSTING.RESTRICT.CUST&quot;,&#xd;
                &quot;type&quot;: &quot;Override&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;code&quot;: &quot;O-11622&quot;,&#xd;
                &quot;description&quot;: &quot;Account ${accountId} - Customer Deceased&quot;,&#xd;
                &quot;id&quot;: &quot;POSTING.RESTRICT&quot;,&#xd;
                &quot;type&quot;: &quot;Override&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;code&quot;: &quot;O-12005&quot;,&#xd;
                &quot;options&quot;: [&#xd;
                    &quot;RECEIVED&quot;,&#xd;
                    &quot;NOT RECEIVED&quot;&#xd;
                ],&#xd;
                &quot;description&quot;: &quot;Have you received Deposit Agreement/AAA*207 from ${CIF}RECEIVED_NOT RECEIVED&quot;,&#xd;
                &quot;id&quot;: &quot;DM.CONFIRM.DOC&quot;,&#xd;
                &quot;type&quot;: &quot;Warning&quot;,&#xd;
                &quot;responseCode&quot;:&quot;RECEIVED&quot;&#xd;
            }&#xd;
        ]&#xd;
    }&#xd;
    },&#xd;
	&quot;body&quot;: {&#xd;
		&quot;currency&quot;: &quot;EGP&quot;,&#xd;
		&quot;productId&quot;: &quot;MDI.TD.3M.INT.MONTHLY&quot;,&#xd;
		&quot;partyIds&quot;: [&#xd;
			{&#xd;
				&quot;partyId&quot;: &quot;${CIF}&quot;&#xd;
			}&#xd;
		],&#xd;
		&quot;commitment&quot;: {&#xd;
			&quot;amount&quot;: &quot;1000&quot;&#xd;
		},&#xd;
		&quot;settlement&quot;: {&#xd;
			&quot;assocSettlement&quot;: [&#xd;
				{&#xd;
					&quot;reference&quot;: [&#xd;
						{&#xd;
							&quot;payinAccount&quot;: &quot;${accountId}&quot;&#xd;
						}&#xd;
					]&#xd;
				}&#xd;
			],&#xd;
			&quot;payout&quot;: [&#xd;
				{&#xd;
					&quot;property&quot;: [&#xd;
						{&#xd;
							&quot;payoutAccount&quot;: &quot;${accountId}&quot;&#xd;
						}&#xd;
					]&#xd;
				},&#xd;
				{&#xd;
					&quot;property&quot;: [&#xd;
						{&#xd;
							&quot;payoutAccount&quot;: &quot;${accountId}&quot;&#xd;
						}&#xd;
					]&#xd;
				}&#xd;
			]&#xd;
		}&#xd;
	}&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">10.10.90.40</stringProp>
                <stringProp name="HTTPSampler.port">9446</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/MDICORE/api/v2.0.0/holdings/deposits/termDeposits</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="companyId" elementType="Header">
                      <stringProp name="Header.name">companyId</stringProp>
                      <stringProp name="Header.value">EG0011001</stringProp>
                    </elementProp>
                    <elementProp name="Postman-Token" elementType="Header">
                      <stringProp name="Header.name">Postman-Token</stringProp>
                      <stringProp name="Header.value">4496964e-6ec3-4893-92d6-065a4f02d84d</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">PostmanRuntime/7.31.1</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="TDarrangmentId Extractor" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">TDarrangmentId</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$..arrangmentId</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
                <stringProp name="JSON_PATH">$..status</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="+++CreateLimit+++" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="CreateLimit" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreateLimit-1" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
&#xd;
    &quot;header&quot;:{&#xd;
&#xd;
    &quot;override&quot;: {&#xd;
        &quot;overrideDetails&quot;: [&#xd;
            {&#xd;
                &quot;code&quot;: &quot;O-10843&quot;,&#xd;
                &quot;description&quot;: &quot;COLLATERAL CODE NOT ENTERED FOR VARIABLE LIMIT&quot;,&#xd;
                &quot;id&quot;: &quot;LI.COLL.CODE.NOT.VAR.LIM&quot;,&#xd;
                &quot;type&quot;: &quot;Override&quot;&#xd;
            }&#xd;
        ]&#xd;
    }&#xd;
    },&#xd;
&#xd;
    &quot;body&quot;:&#xd;
&#xd;
&#xd;
    {&#xd;
&#xd;
       &quot;limitCurrency&quot;:&quot;EGP&quot;,&#xd;
&#xd;
       &quot;availableMarker&quot;:&quot;Y&quot;,&#xd;
&#xd;
         &quot;limitProduct&quot;:&quot;3300&quot;,&#xd;
        &quot;customerIds&quot;: [&#xd;
      {&#xd;
        &quot;customerId&quot;: &quot;${CIF}&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;serialNumber&quot;: &quot;01&quot;,&#xd;
    &quot;internalAmount&quot;:50000,&#xd;
    &quot;fixedOrVariable&quot;: &quot;VARIABLE&quot;&#xd;
    }&#xd;
&#xd;
&#xd;
&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">10.10.90.40</stringProp>
              <stringProp name="HTTPSampler.port">9446</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/MDIDELIV/api/v1.0.0/holdings/limit/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="companyId" elementType="Header">
                    <stringProp name="Header.name">companyId</stringProp>
                    <stringProp name="Header.value">EG0011001</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">ea1c9b36-cc5e-41b0-864b-c9b7a2459ad5</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.31.1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
                <stringProp name="JSON_PATH">$.header.status</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="LimitId Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">LimitId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.header.id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
                <collectionProp name="AuthManager.auth_list">
                  <elementProp name="" elementType="Authorization">
                    <stringProp name="Authorization.url">https://10.10.90.40:9446/MDIDELIV/api/v1.0.0/holdings/limit/</stringProp>
                    <stringProp name="Authorization.username">INPUTT</stringProp>
                    <stringProp name="Authorization.password">123456</stringProp>
                    <stringProp name="Authorization.domain"></stringProp>
                    <stringProp name="Authorization.realm"></stringProp>
                  </elementProp>
                </collectionProp>
                <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
              </AuthManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="+++CreateCollaterl+++" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="CreateCollateral" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreateCollateral-2" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;header&quot;: {&#xd;
		&quot;override&quot;: {&#xd;
			&quot;overrideDetails&quot;: [&#xd;
&#xd;
			]&#xd;
		}&#xd;
	},&#xd;
	&quot;body&quot;: {&#xd;
		&quot;collateralCodeId&quot;: &quot;230&quot;,&#xd;
		&quot;collateralTypeId&quot;: &quot;230&quot;,&#xd;
		&quot;currency&quot;: &quot;EGP&quot;,&#xd;
		&quot;collateralItem&quot;: &quot;${TDarrangmentId}&quot;,&#xd;
		&quot;customerId&quot;: &quot;${CIF}&quot;,&#xd;
        &quot;collateralMarketValue&quot;: 30000&#xd;
	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">10.10.90.40</stringProp>
              <stringProp name="HTTPSampler.port">9446</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/MDICORE/api/v1.0.0/holdings/customers/collaterals</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="companyId" elementType="Header">
                    <stringProp name="Header.name">companyId</stringProp>
                    <stringProp name="Header.value">EG0011001</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">dd5bc18b-46a3-4f85-a32b-e46a57f30a31</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.31.1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
                <stringProp name="JSON_PATH">$.header.status</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="CollateralID Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">CollateralID</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$..collateralItem</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
                <collectionProp name="AuthManager.auth_list">
                  <elementProp name="" elementType="Authorization">
                    <stringProp name="Authorization.url">https://10.10.90.40:9446/MDICORE/api/v1.0.0/holdings/customers/</stringProp>
                    <stringProp name="Authorization.username">INPUTT</stringProp>
                    <stringProp name="Authorization.password">123456</stringProp>
                    <stringProp name="Authorization.domain"></stringProp>
                    <stringProp name="Authorization.realm"></stringProp>
                  </elementProp>
                </collectionProp>
                <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
              </AuthManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="+++CreateCollateralLink+++" enabled="false"/>
        <hashTree>
          <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
            <collectionProp name="AuthManager.auth_list">
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">https://10.10.90.40:9446//MDIDELIV/api/v1.0.0/holdings/collateralright/</stringProp>
                <stringProp name="Authorization.username">INPUTT</stringProp>
                <stringProp name="Authorization.password">123456</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
              </elementProp>
            </collectionProp>
            <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
          </AuthManager>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="collateraLink" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="collateraLink-1" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;header&quot;: {&#xd;
    &quot;override&quot;: {&#xd;
      &quot;overrideDetails&quot;: [&#xd;
        {&#xd;
        }&#xd;
      ]&#xd;
    }&#xd;
  },&#xd;
  &quot;body&quot;: {&#xd;
&#xd;
    &quot;limitReferences&quot;: [&#xd;
      {&#xd;
        &quot;limitReference&quot;: &quot;${LimitId}&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;customerIds&quot;: [&#xd;
      {&#xd;
        &quot;customerId&quot;: &quot;${CIF}&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;collateralIds&quot;: [&#xd;
      {&#xd;
        &quot;collateralId&quot;: &quot;${CollateralID}&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;collateralCodeId&quot;: &quot;230&quot;,&#xd;
    &quot;priority&quot;: &quot;1&quot;&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">10.10.90.40</stringProp>
              <stringProp name="HTTPSampler.port">9446</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">//MDIDELIV/api/v1.0.0/holdings/collateralright/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">72eb6577-776e-47ff-9cc4-296530b8d99b</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.31.1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
                <stringProp name="JSON_PATH">$.header.status</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="collateralLinkId Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">collateralLinkId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.header.id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
